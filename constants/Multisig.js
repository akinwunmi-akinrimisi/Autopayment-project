const CONTRACT_ADDRESS = "0x2140ef2532a4cb0f1a2399b673f374b7f6289481";
const ABI = [
	{
		type: "constructor",
		inputs: [
			{
				name: "_signers",
				type: "address[]",
				internalType: "address[]",
			},
			{ name: "_quorum", type: "uint256", internalType: "uint256" },
			{ name: "_feeToken", type: "address", internalType: "address" },
		],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "createProposal",
		inputs: [
			{
				name: "proposalType",
				type: "uint8",
				internalType: "enum Multisig.ProposalType",
			},
			{ name: "target", type: "address", internalType: "address" },
			{ name: "signer", type: "address", internalType: "address" },
			{ name: "newQuorum", type: "uint256", internalType: "uint256" },
			{
				name: "withdrawalAmount",
				type: "uint256",
				internalType: "uint256",
			},
		],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "executeProposal",
		inputs: [{ name: "proposalId", type: "uint256", internalType: "uint256" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "feeToken",
		inputs: [],
		outputs: [{ name: "", type: "address", internalType: "contract IERC20" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "getSigners",
		inputs: [],
		outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "hasVoted",
		inputs: [
			{ name: "proposalId", type: "uint256", internalType: "uint256" },
			{ name: "voter", type: "address", internalType: "address" },
		],
		outputs: [{ name: "voted", type: "bool", internalType: "bool" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "isSigner",
		inputs: [{ name: "account", type: "address", internalType: "address" }],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "proposalCount",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "proposals",
		inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		outputs: [
			{
				name: "proposalType",
				type: "uint8",
				internalType: "enum Multisig.ProposalType",
			},
			{ name: "target", type: "address", internalType: "address" },
			{ name: "signer", type: "address", internalType: "address" },
			{ name: "newQuorum", type: "uint256", internalType: "uint256" },
			{
				name: "withdrawalAmount",
				type: "uint256",
				internalType: "uint256",
			},
			{ name: "votesFor", type: "uint256", internalType: "uint256" },
			{
				name: "votesAgainst",
				type: "uint256",
				internalType: "uint256",
			},
			{ name: "executed", type: "bool", internalType: "bool" },
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "quorum",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "resolveEscrow",
		inputs: [
			{
				name: "escrowContract",
				type: "address",
				internalType: "address",
			},
			{
				name: "refundAmount",
				type: "uint256",
				internalType: "uint256",
			},
			{
				name: "releaseAmount",
				type: "uint256",
				internalType: "uint256",
			},
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "signers",
		inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		outputs: [{ name: "", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "vote",
		inputs: [
			{ name: "proposalId", type: "uint256", internalType: "uint256" },
			{ name: "support", type: "bool", internalType: "bool" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "event",
		name: "EscrowResolved",
		inputs: [
			{
				name: "escrowContract",
				type: "address",
				indexed: false,
				internalType: "address",
			},
			{
				name: "refundAmount",
				type: "uint256",
				indexed: false,
				internalType: "uint256",
			},
			{
				name: "releaseAmount",
				type: "uint256",
				indexed: false,
				internalType: "uint256",
			},
			{
				name: "signer",
				type: "address",
				indexed: true,
				internalType: "address",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "ProposalCreated",
		inputs: [
			{
				name: "proposalId",
				type: "uint256",
				indexed: false,
				internalType: "uint256",
			},
			{
				name: "proposalType",
				type: "uint8",
				indexed: false,
				internalType: "enum Multisig.ProposalType",
			},
			{
				name: "target",
				type: "address",
				indexed: false,
				internalType: "address",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "ProposalExecuted",
		inputs: [
			{
				name: "proposalId",
				type: "uint256",
				indexed: false,
				internalType: "uint256",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "VoteCasted",
		inputs: [
			{
				name: "proposalId",
				type: "uint256",
				indexed: false,
				internalType: "uint256",
			},
			{
				name: "voter",
				type: "address",
				indexed: false,
				internalType: "address",
			},
			{
				name: "support",
				type: "bool",
				indexed: false,
				internalType: "bool",
			},
		],
		anonymous: false,
	},
	{ type: "error", name: "AlreadyASigner", inputs: [] },
	{ type: "error", name: "AlreadyVoted", inputs: [] },
	{ type: "error", name: "EscrowContractFailed", inputs: [] },
	{ type: "error", name: "HigherVotesAgainst", inputs: [] },
	{ type: "error", name: "InsufficientTokenBalance", inputs: [] },
	{ type: "error", name: "InsufficientVotesToExecute", inputs: [] },
	{ type: "error", name: "InvalidERC20TokenAddress", inputs: [] },
	{ type: "error", name: "InvalidQuorum", inputs: [] },
	{ type: "error", name: "NotASigner", inputs: [] },
	{ type: "error", name: "NotAuthorizedSigner", inputs: [] },
	{ type: "error", name: "ProposalAlreadyExecuted", inputs: [] },
	{ type: "error", name: "ReentrancyGuardReentrantCall", inputs: [] },
	{
		type: "error",
		name: "SafeERC20FailedOperation",
		inputs: [{ name: "token", type: "address", internalType: "address" }],
	},
	{ type: "error", name: "SignerNotFound", inputs: [] },
	{ type: "error", name: "SignersRequired", inputs: [] },
];
